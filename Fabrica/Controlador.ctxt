#BlueJ class context
comment0.target=Controlador
comment0.text=\r\n\ Clase\ que\ controla\ las\ distintas\ operaciones\ sobre\ ficheros\r\n\ \r\n\ @author\ Marcos\ La\u00ED\u00F1o\ Ord\u00F3\u00F1ez\r\n
comment1.params=
comment1.target=void\ createArchivoClientes()
comment1.text=\r\n\ Crea\ el\ archivo\ de\ datos\ en\ el\ que\ se\ va\ a\ almacenar\ el\ array-list\ de\ clientes\r\n
comment10.params=muebles
comment10.target=void\ saveMuebles(java.util.ArrayList)
comment10.text=\r\n\ M\u00E9todo\ que\ permite\ guardar\ en\ un\ fichero\ el\ arraylist\ de\ empleados\ que\ se\ le\ pasa\ por\ par\u00E1metro.\r\n
comment11.params=
comment11.target=java.util.ArrayList\ loadMuebles()
comment11.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ arraylist\ con\ todos\ los\ muebles\ guardados\ en\ el\ fichero.\r\n
comment12.params=
comment12.target=void\ checkFicheroMuebles()
comment12.text=\r\n\ M\u00E9todo\ que\ comprueba\ que\ exista\ los\ archivos\ de\ datos.\r\n\ En\ caso\ de\ que\ no\ existan\ estos\ archivos,\ los\ crea\ con\ datos\ iniciales\ para\ poder\ realizar\ las\ pruebas.\r\n
comment13.params=
comment13.target=void\ initialData()
comment13.text=\r\n\ M\u00E9todo\ que\ genera\ datos\ iniciales\ con\ los\ que\ testear\ la\ aplicaci\u00F3n\r\n
comment2.params=clientes
comment2.target=void\ saveClientes(java.util.ArrayList)
comment2.text=\r\n\ M\u00E9todo\ que\ permite\ guardar\ en\ un\ fichero\ el\ arraylist\ de\ clientes\ que\ se\ le\ pasa\ por\ par\u00E1metro.\r\n
comment3.params=
comment3.target=java.util.ArrayList\ loadClientes()
comment3.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ arraylist\ con\ todos\ los\ clientes\ guardados\ en\ el\ fichero.\r\n
comment4.params=
comment4.target=void\ checkFicheroClientes()
comment4.text=\r\n\ M\u00E9todo\ que\ comprueba\ que\ exista\ los\ archivos\ de\ datos.\r\n\ En\ caso\ de\ que\ no\ exista\ el\ archivo,\ lo\ crea\ y\ genera\ unos\ datos\ iniciales\ para\ pruebas.\r\n
comment5.params=
comment5.target=void\ createArchivoEmpleados()
comment5.text=\r\n\ Crea\ el\ archivo\ de\ datos\ en\ el\ que\ se\ va\ a\ almacenar\ el\ array-list\ de\ empleados\r\n
comment6.params=empleados
comment6.target=void\ saveEmpleados(java.util.ArrayList)
comment6.text=\r\n\ M\u00E9todo\ que\ permite\ guardar\ en\ un\ fichero\ el\ arraylist\ de\ empleados\ que\ se\ le\ pasa\ por\ par\u00E1metro.\r\n
comment7.params=
comment7.target=java.util.ArrayList\ loadEmpleados()
comment7.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ arraylist\ con\ todos\ los\ empleados\ guardados\ en\ el\ fichero.\r\n
comment8.params=
comment8.target=void\ checkFicheroEmpleados()
comment8.text=\r\n\ M\u00E9todo\ que\ comprueba\ que\ exista\ los\ archivos\ de\ datos.\r\n\ En\ caso\ de\ que\ no\ existan\ estos\ archivos,\ los\ crea\ con\ datos\ iniciales\ para\ poder\ realizar\ las\ pruebas.\r\n
comment9.params=
comment9.target=void\ createArchivoMuebles()
comment9.text=\r\n\ Crea\ el\ archivo\ de\ datos\ en\ el\ que\ se\ va\ a\ almacenar\ el\ array-list\ de\ muebles\r\n
numComments=14
