#BlueJ class context
comment0.target=Controlador
comment0.text=\r\n\ Clase\ que\ controla\ las\ distintas\ operaciones\ sobre\ ficheros\r\n\ \r\n\ @author\ Marcos\ La\u00ED\u00F1o\ Ord\u00F3\u00F1ez\r\n
comment1.params=
comment1.target=void\ createArchivoPersonas()
comment1.text=\r\n\ Crea\ el\ archivo\ de\ datos\ en\ el\ que\ se\ va\ a\ almacenar\ el\ array-list\ de\ personas\r\n
comment10.params=
comment10.target=void\ verListaEmpleados()
comment10.text=\r\n\ M\u00E9todo\ que\ permite\ al\ Jefe\ consultar\ la\ lista\ de\ todos\ los\ empleados\ con\ los\ datos\ m\u00E1s\ relevantes\r\n
comment11.params=
comment11.target=void\ crearEmpleado()
comment11.text=\r\n\ M\u00E9todo\ que\ permite\ al\ jefe\ "contratar"\ a\ trav\u00E9s\ de\ un\ formulario.\r\n
comment12.params=usuario
comment12.target=boolean\ comprobarNick(java.lang.String)
comment12.text=\r\n\ M\u00E9todo\ que\ comprueba\ si\ el\ nick\ que\ pasamos\ como\ par\u00E1metro\ corresponde\ a\ alg\u00FAn\ usuario\ existente\r\n
comment13.params=campo\ exacto\ min\ max
comment13.target=java.lang.String\ setDato(java.lang.String,\ int,\ int,\ int)
comment13.text=\r\n\ M\u00E9todo\ que\ permite\ que\ el\ usuario\ establezca\ el\ nombre\ de\ un\ nuevo\ usuario\r\n
comment14.params=
comment14.target=int\ elegirOpcion()
comment2.params=personas
comment2.target=void\ savePersonas(java.util.ArrayList)
comment2.text=\r\n\ M\u00E9todo\ que\ permite\ guardar\ en\ un\ fichero\ el\ arraylist\ de\ personas\ que\ se\ le\ pasa\ por\ par\u00E1metro.\r\n
comment3.params=
comment3.target=java.util.ArrayList\ loadPersonas()
comment3.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ arraylist\ con\ todas\ las\ personas\ guardadas\ en\ el\ fichero.\r\n
comment4.params=
comment4.target=void\ checkFicheroPersonas()
comment4.text=\r\n\ M\u00E9todo\ que\ comprueba\ que\ exista\ los\ archivos\ de\ datos.\r\n\ En\ caso\ de\ que\ no\ existan\ estos\ archivos,\ los\ crea\ con\ datos\ iniciales\ para\ poder\ realizar\ las\ pruebas.\r\n
comment5.params=
comment5.target=void\ createArchivoMuebles()
comment5.text=\r\n\ Crea\ el\ archivo\ de\ datos\ en\ el\ que\ se\ va\ a\ almacenar\ el\ array-list\ de\ muebles\r\n
comment6.params=muebles
comment6.target=void\ saveMuebles(java.util.ArrayList)
comment6.text=\r\n\ M\u00E9todo\ que\ permite\ guardar\ en\ un\ fichero\ el\ arraylist\ de\ empleados\ que\ se\ le\ pasa\ por\ par\u00E1metro.\r\n
comment7.params=
comment7.target=java.util.ArrayList\ loadMuebles()
comment7.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ arraylist\ con\ todos\ los\ muebles\ guardados\ en\ el\ fichero.\r\n
comment8.params=
comment8.target=void\ checkFicheroMuebles()
comment8.text=\r\n\ M\u00E9todo\ que\ comprueba\ que\ exista\ los\ archivos\ de\ datos.\r\n\ En\ caso\ de\ que\ no\ existan\ estos\ archivos,\ los\ crea\ con\ datos\ iniciales\ para\ poder\ realizar\ las\ pruebas.\r\n
comment9.params=
comment9.target=void\ initialData()
comment9.text=\r\n\ M\u00E9todo\ que\ genera\ datos\ iniciales\ con\ los\ que\ testear\ la\ aplicaci\u00F3n\r\n
numComments=15
